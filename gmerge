#!/bin/bash

# Copyright (c) 2009 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

set -e

build=1

# Package name is the last argument.
package_name=${!#}

# If no package name is provided skip to emerge options or if -n is given.
if [[ $package_name == -* ]] || [ x$1 == x-n ]
then
  build=0
fi

DEVKIT_URL=$(grep ^CHROMEOS_DEVSERVER /etc/lsb-release | cut -d = -f 2-)
BOARD_NAME=$(grep ^CHROMEOS_RELEASE_BOARD $dir/etc/lsb-release | cut -d = -f 2-)

if [ -z $DEVKIT_URL ]
then
  echo "No devkit server specified in /etc/lsb-release"
  exit 1
fi

if [ -z $BOARD_NAME ]
then
  echo "No board specified in /etc/lsb-release"
  exit 1
fi

mount -o remount,rw /
mkdir -p /etc/make.profile

# Delete the local binary package cache.
sudo rm -rf /usr/portage/packages

if [ $build == 1 ] ; then
  echo "Building $package_name"
  ESCAPED_PACKAGE=$(python -c \
    "import urllib; print urllib.quote('''$package_name''')")
  ESCAPED_BOARD=$(python -c \
  "import urllib; print urllib.quote('''${BOARD_NAME}''')")

  wget $DEVKIT_URL/build \
    --post-data="pkg=${ESCAPED_PACKAGE}&board=${ESCAPED_BOARD}"
fi

# Installing emerge into /usr/local installs make.globals needed in
# /usr/local/etc rather than /etc.
if [ ! -f /etc/make.globals ]
then
  if [ -f /usr/local/etc/make.globals ]
  then
    echo "Missing /etc/make.globals, copying over from /usr/local/etc"
    sudo cp /usr/local/etc/make.globals /etc
   else
    echo "Missing /etc/make.globals and none in /usr/local/etc.  Aborting."
    exit 1
  fi
fi

echo "Emerging $package_name"

export PORTAGE_BINHOST="${DEVKIT_URL}/static/pkgroot/${BOARD_NAME}/packages"
export PORTAGE_TMPDIR=/tmp

# Accept keywords only for stable ebuilds by default.
if [ -z "$ACCEPT_KEYWORDS" ] ; then
  ACCEPT_KEYWORDS='arm x86 ~arm ~x86'
fi
export ACCEPT_KEYWORDS

FEATURES="-sandbox" emerge --getbinpkg --usepkgonly "$@"
