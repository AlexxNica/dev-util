#!/bin/bash

# Copyright (c) 2009-2010 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Prints the arguments and dies.
print_and_die() {
  echo $*
  exit 1
}

# Set up PORTAGE variables to be rooted in /usr/local/portage.
setup_portage_vars() {
  export PORTDIR=/usr/local/portage
  export PKGDIR=/usr/local/portage
  export DISTDIR=/usr/local/portage/distfiles
  export PORTAGE_BINHOST="${DEVKIT_URL}/static/pkgroot/${BOARD_NAME}/packages"
  export PORTAGE_TMPDIR=/tmp
  export CONFIG_PROTECT="-*"
  export FEATURES="-sandbox"
  # Accept keywords only for stable ebuilds by default.
  [ -z "$ACCEPT_KEYWORDS" ] && ACCEPT_KEYWORDS="arm x86 ~arm ~x86"
  export ACCEPT_KEYWORDS
  export ROOT=/
}

set -e

# Get variables for the devserver from the lsb-release file.
DEVKIT_URL=$(grep ^CHROMEOS_DEVSERVER /etc/lsb-release | cut -d = -f 2-)
BOARD_NAME=$(grep ^CHROMEOS_RELEASE_BOARD /etc/lsb-release | cut -d = -f 2-)
[ -z "${BOARD_NAME}" ] && print_and_die "No board in /etc/lsb-release"
[ -z "${DEVKIT_URL}" ] && print_and_die "No dev server url in /etc/lsb-release"

setup_portage_vars

# Determine if we should send a build command to the devserver.
BUILD=1
if [ x$1 == x-n ]; then
  BUILD=0
  shift
fi

# Package name is the last argument.
# TODO(sosa) - Support multiple packages.
PACKAGE_NAME=${!#}

# If no package name is provided skip to emerge options.
[[ ${PACKAGE_NAME} == -* ]] && BUILD=0

mount -o remount,rw /

# Re-mount /tmp as exec.
mount -o remount,exec /tmp
trap "mount -o remount,noexec /tmp" EXIT

# Delete the local binary package cache.
rm -rf "${PKGDIR}/packages"

if [ ${BUILD} == 1 ]; then
  echo "Building ${PACKAGE_NAME}"
  ESCAPED_PACKAGE=$(python -c \
    "import urllib; print urllib.quote('''${PACKAGE_NAME}''')")
  ESCAPED_BOARD=$(python -c \
    "import urllib; print urllib.quote('''${BOARD_NAME}''')")

  wget $DEVKIT_URL/build \
    --post-data="pkg=${ESCAPED_PACKAGE}&board=${ESCAPED_BOARD}"
fi

echo "Emerging ${PACKAGE_NAME}"
emerge --getbinpkgonly --usepkgonly "$@"
