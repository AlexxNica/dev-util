# Copyright (c) 2011 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Programmable completion for some Chromium OS build scripts.

_list_repo_commands() {
  local repo=${COMP_WORDS[0]}
  "${repo}" help --all | grep -E '^  ' | sed 's/  \([^ ]\+\) .\+/\1/'
}

_list_repo_branches() {
  local repo=${COMP_WORDS[0]}
  "${repo}" branches 2>&1 | grep \| | sed 's/[ *][Pp ] *\([^ ]\+\) .*/\1/'
}

_list_repo_projects() {
  local repo=${COMP_WORDS[0]}
  local manifest=$(mktemp)
  "${repo}" manifest -o "${manifest}" >& /dev/null
  grep 'project name=' "${manifest}" | sed 's/.\+name="\([^"]\+\)".\+/\1/'
  rm -f "${manifest}" >& /dev/null
}

# Complete the repo <command> argument.
_complete_repo_command() {
  [ ${COMP_CWORD} -eq 1 ] || return 1
  local command=${COMP_WORDS[1]}
  COMPREPLY=($(compgen -W "$(_list_repo_commands)" -- "${command}"))
  return 0
}

_complete_repo_arg() {
  [ ${COMP_CWORD} -gt 1 ] || return 1
  local command=${COMP_WORDS[1]}
  local current=${COMP_WORDS[COMP_CWORD]}
  if [[ ${command} == "abandon" ]]; then
    if [[ ${COMP_CWORD} -eq 2 ]]; then
      COMPREPLY=($(compgen -W "$(_list_repo_branches)" -- "${current}"))
    else
      COMPREPLY=($(compgen -W "$(_list_repo_projects)" -- "${current}"))
    fi
    return 0
  fi
  if [[ ${command} == "help" ]]; then
    [ ${COMP_CWORD} -eq 2 ] && \
      COMPREPLY=($(compgen -W "$(_list_repo_commands)" -- "${current}"))
    return 0
  fi
  if [[ ${command} == "start" ]]; then
    [ ${COMP_CWORD} -gt 2 ] && \
      COMPREPLY=($(compgen -W "$(_list_repo_projects)" -- "${current}"))
    return 0
  fi
  return 1
}

# Complete the repo arguments.
_complete_repo() {
  COMPREPLY=()
  _complete_repo_command && return 0
  _complete_repo_arg && return 0
  return 0
}

complete -F _complete_repo repo
